apiVersion: v1
kind: List

items:


# --------------------------=== POD DEPLOYMENT 0 ===--------------------------

#------------------- PersistentVolume for bootnode/genessis file ------------------
#shared among all nodes

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: volume-bootnode
    namespace: ethereum-net
  spec:
    storageClassName: manual
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi

- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: bootnode
    labels:
      type: local
  spec:
    storageClassName: manual
    capacity:
      storage: 20Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Delete
    hostPath:
      #type: DirectoryOrCreate
      path: "/datas/bootnode"

#------------------- config for bootnode private key ------------------
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: keystore-config-bootnode
    namespace: ethereum-net
    labels:
      app: bootnode
      name: keystore-config-bootnode
  data:
    bootnode.key: |-
      82a5635ba83da5d215c1588692fb0c7e9b244af0c265731dac69c39ad7dcf83f

#------------------- config file for bootnode ------------------
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: gethconfig-bootnode
    namespace: ethereum-net
    labels:
      app: bootnode
      name: gethconfig-bootnode
  data:
    gethconfig: |-
      [Eth]
      NetworkId = 123456
      SyncMode = "full"
      LightPeers = 100
      DatabaseCache = 768
      EnablePreimageRecording = false
      
      [Eth.Ethash]
      CacheDir = "ethash"
      CachesInMem = 2
      CachesOnDisk = 3
      DatasetDir = "/root/.ethash"
      DatasetsInMem = 1
      DatasetsOnDisk = 2
      PowMode = 0
      
      [Eth.TxPool]
      Locals = []
      NoLocals = false
      Journal = "transactions.rlp"
      Rejournal = 3600000000000
      PriceLimit = 0
      PriceBump = 0
      AccountSlots = 1000000
      GlobalSlots = 1000000
      AccountQueue = 1000000
      GlobalQueue = 1000000
      Lifetime = 10800000000000
      
      [Eth.GPO]
      Blocks = 20
      Percentile = 60
      
      
      [Node]
      UserIdent = "bootnode"
      DataDir = "/etc/testnet/bootnode"
      IPCPath = "/etc/testnet/bootnode/geth.ipc"
      HTTPHost = "0.0.0.0"
      HTTPPort = 8545
      HTTPCors = ["*"]
      HTTPVirtualHosts = ["*"]
      HTTPModules = ["eth", "net", "web3", "personal", "miner", "admin", "clique"]
      WSHost = "0.0.0.0"
      WSPort = 8546
      WSOrigins = ["*"]
      WSModules = ["net", "web3", "eth"]
      
      [Node.P2P]
      MaxPeers = 25
      NoDiscovery = false
      BootstrapNodes = []
      BootstrapNodesV5 = []
      StaticNodes = []
      TrustedNodes = []
      ListenAddr = ":30303"
      EnableMsgEvents = false

#---------------------------------= BOOT NODE SERVICE =---------------------------------------

- apiVersion: v1
  kind: Service
  metadata:
    namespace: ethereum-net
    name: geth-bootnode-svc
    labels:
      app: bootnode
      tier: backend
      name: geth-bootnode-svc
  spec:
    selector:
      app: bootnode
      tier: backend
      name: bootnode
    type: ClusterIP
    #externalTrafficPolicy: Cluster
    ports:
      - name: geth-bootnode-ipc-discovery
        protocol: UDP
        port: 30303
        targetPort: 30303
      - name: geth-bootnode-discovery
        protocol: UDP
        port: 30301
        targetPort: 30301


- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    namespace: ethereum-net
    name: geth-bootnode
    labels:
      app: bootnode
      tier: backend
      name: geth-bootnode
  spec:
    selector:
      matchLabels:
        app: bootnode
    replicas: 1
    serviceName: geth-bootnode
    template:
      metadata:
        name: geth-bootnode
        labels:
          app: bootnode
          tier: backend
          name: bootnode
      spec:
        containers:
        - name: geth-bootnode-container
          image: ethereum/client-go:alltools-stable
          imagePullPolicy: IfNotPresent
          command: [ "sh" ]
          args:
          - "-cx"
          - " rm -rf /etc/testnet/bootnode;
            echo 82a5635ba83da5d215c1588692fb0c7e9b244af0c265731dac69c39ad7dcf83f > /etc/testnet/bootnode/bootnode.key;
            /usr/local/bin/bootnode -nodekey /etc/testnet/bootnode/bootnode.key;"
          volumeMounts:
          - name: bootnode-persistent-storage
            mountPath: /etc/testnet/bootnode/storage
          - name: bootnode-config-persistent-storage
            mountPath: /etc/gethconfigmap/bootnode
          - name: geth-boot-node-persistent-storage
            mountPath: /etc/testnet/bootnode
          - name: genesis-config-persistent-storage
            mountPath: /etc/geth/genesis/genesis-geth.json
            subPath: genesis-geth.json
        volumes:
        - name: keystore-config-persistent-storage
          configMap:
            name: keystore-config-bootnode
            items:
            - key: UTC--2021-07-19T13-43-12.906030662Z--284971d0df1bf4a2e5b053261b8beffdc6ca8e0a
              path: UTC--2021-07-19T13-43-12.906030662Z--284971d0df1bf4a2e5b053261b8beffdc6ca8e0a
        - name: geth-boot-node-persistent-storage
          hostPath:
            path: /var/lib/docker/geth-storage/bootnode
        - name: genesis-config-persistent-storage
          configMap:
            name: genesis-config
            items:
            - key: genesis-geth.json
              path: genesis-geth.json
        - name: bootnode-persistent-storage
          persistentVolumeClaim:
          claimName: volume-bootnode
        - name: bootnode-config-persistent-storage
          configMap:
            name: gethconfig-bootnode
            items:
            - key: gethconfig
              path: gethconfig.toml

#---------------------------------=NODES PERSISTANT VOLUME 0=---------------------------------------
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: miner0
    labels:
      type: local
  spec:
    storageClassName: manual
    capacity:
      storage: 20Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Delete
    hostPath:
      #type: DirectoryOrCreate
      path: "/datas/miner0"
#--------------------------=PERSISTENT VOLUME CLAIM 0=------------------------------

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: volume-miner0
    namespace: ethereum-net
  spec:
    storageClassName: manual
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi


# --------------------------=== POD DEPLOYMENT 1 ===--------------------------

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: keystore-config-miner1
    namespace: ethereum-net
    labels:
      app: miner
      name: keystore-config-miner1
  data:
    UTC--2021-07-19T13-43-14.403483777Z--6c72e4c3c645a5d84b44f6f143ce559c9e8d8153: |-
      {"address":"6c72e4c3c645a5d84b44f6f143ce559c9e8d8153","crypto":{"cipher":"aes-128-ctr","ciphertext":"66aee84f2d3f5c931738848650282ac7e55aa6423d585188525bd14b0f056500","cipherparams":{"iv":"9f12d12dff26469f89369a43c55ae48b"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"1f4f3690dd3b59839e53c458f7be8a398d8487303740325c9f1d762c4dff6f04"},"mac":"47ccc219265d0800f6df292abd4a47a1ef629322b32bc8a7d08630ce211d34b3"},"id":"13f5148b-bda5-4279-9777-fdf4f37f0038","version":3}

#---------------------------------=CONFIG MAP NODE 1=---------------------------------------
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: gethconfig-miner1
    namespace: ethereum-net
    labels:
      app: miner
      name: gethconfig-miner1
  data:
    gethconfig: |-
      [Eth]
      NetworkId = 123456
      SyncMode = "full"
      LightPeers = 100
      DatabaseCache = 1024
      EnablePreimageRecording = false
      
      [Eth.Ethash]
      CacheDir = "ethash"
      CachesInMem = 2
      CachesOnDisk = 3
      DatasetDir = "/root/.ethash"
      DatasetsInMem = 1
      DatasetsOnDisk = 2
      PowMode = 0
      
      [Eth.TxPool]
      Locals = []
      NoLocals = false
      Journal = "transactions.rlp"
      Rejournal = 3600000000000
      PriceLimit = 0
      PriceBump = 0
      AccountSlots = 1000000
      GlobalSlots = 1000000
      AccountQueue = 100000
      GlobalQueue = 100000
      Lifetime = 10800000000000
      
      [Eth.GPO]
      Blocks = 20
      Percentile = 60
      
      [Node]
      UserIdent = "miner1"
      DataDir = "/etc/testnet/miner1"
      IPCPath = "/etc/testnet/miner1/geth.ipc"
      HTTPHost = "0.0.0.0"
      HTTPPort = 8545
      HTTPCors = ["*"]
      HTTPVirtualHosts = ["*"]
      HTTPModules = ["eth", "net", "web3", "personal", "miner", "admin", "clique", "personal", "txpool", "debug"]
      WSHost = "0.0.0.0"
      WSPort = 8546
      WSOrigins = ["*"]
      WSModules = ["net", "web3", "eth", "clique", "web3", "personal", "miner", "txpool" , "admin", "debug"]
      
      [Node.P2P]
      MaxPeers = 25
      NoDiscovery = false
      BootstrapNodes = []
      BootstrapNodesV5 = []
      StaticNodes = []
      TrustedNodes = []
      ListenAddr = ":30303"
      EnableMsgEvents = false
      

- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    namespace: ethereum-net
    labels:
      app: miner
      tier: backend
      name: geth-miner1
      serviceSelector: ethereum-node
    name: geth-miner1
  spec:
    selector:
      matchLabels:
        app: miner
    replicas: 1
    serviceName: geth-miner1
    template:
      metadata:
        name: geth-miner1
        labels:
          app: miner
          tier: backend
          name: miner1
      spec:
        containers:
        - name: miner1-container
          image: ethereum/client-go:stable
          imagePullPolicy: Always
          command: [ "sh" ]
          args:
          - "-cx"
          - "rm -rf /etc/testnet/miner1; /usr/local/bin/geth --datadir /etc/testnet/miner1 init /etc/geth/genesis/genesis-geth.json;
            touch /etc/testnet/miner1/genesis_created;
            echo 123 > /etc/testnet/miner1/password.txt;
            mkdir -p /etc/geth/miner1;
            cp /etc/gethconfigmap/miner1/gethconfig.toml /etc/geth/miner1;
            /usr/local/bin/geth --datadir /etc/testnet/miner1 \
            --mine \
            --verbosity 3  \
            --nousb \
            --rpc \
            --ws \
            --metrics --metrics.influxdb --metrics.influxdb.endpoint 'http://influxdb.monitoring:8086' --metrics.influxdb.username 'admin' --metrics.influxdb.password 'admin' \
            --unlock 0x6c72e4c3c645a5d84b44f6f143ce559c9e8d8153 --allow-insecure-unlock --password /etc/testnet/miner1/password.txt --miner.gasprice '0x0' --miner.gaslimit '357500000' --miner.gastarget '357500000' --bootnodes 'enode://b35312c02f067d69549fb4c68d494af4ea2f758075ce925246ce62ce73ed2a5f25d5fc935bacab20d39bb734f78f1d131203b4f2ee6482de9367092271f21454@'$GETH_BOOTNODE_SVC_SERVICE_HOST':0?discport=30301' \
            --config /etc/geth/miner1/gethconfig.toml --maxpendpeers 25 ;"
          ports:
            - containerPort: 8545
            - containerPort: 8546
              protocol: UDP
            - containerPort: 30303
          volumeMounts:
          - name: miner1-persistent-storage
            mountPath: /etc/testnet/miner1
          - name: miner1-config-persistent-storage
            mountPath: /etc/gethconfigmap/miner1
          - name: keystore-config-persistent-storage
            mountPath: /etc/testnet/miner1/keystore/UTC--2021-07-19T13-43-14.403483777Z--6c72e4c3c645a5d84b44f6f143ce559c9e8d8153
            subPath: UTC--2021-07-19T13-43-14.403483777Z--6c72e4c3c645a5d84b44f6f143ce559c9e8d8153
          - name: geth-boot-node-persistent-storage
            mountPath: /etc/testnet/bootnode
          - name: genesis-config-persistent-storage
            mountPath: /etc/geth/genesis/genesis-geth.json
            subPath: genesis-geth.json
        volumes:
        - name: keystore-config-persistent-storage
          configMap:
            name: keystore-config-miner1
            items:
            - key: UTC--2021-07-19T13-43-14.403483777Z--6c72e4c3c645a5d84b44f6f143ce559c9e8d8153
              path: UTC--2021-07-19T13-43-14.403483777Z--6c72e4c3c645a5d84b44f6f143ce559c9e8d8153
        - name: geth-boot-node-persistent-storage
          hostPath:
            path: /var/lib/docker/geth-storage/bootnode
        - name: genesis-config-persistent-storage
          configMap:
            name: genesis-config
            items:
            - key: genesis-geth.json
              path: genesis-geth.json
        - name: miner1-persistent-storage
          persistentVolumeClaim:
          claimName: volume-miner1
        - name: miner1-config-persistent-storage
          configMap:
            name: gethconfig-miner1
            items:
            - key: gethconfig
              path: gethconfig.toml

#---------------------------------=NODES SERVICES 1=---------------------------------------
- apiVersion: v1
  kind: Service
  metadata:
    name: miner1-svc
    namespace: ethereum-net
    labels:
      app: miner
      tier: backend
      name: miner1-svc
  spec:
    selector:
      app: miner
      tier: backend
      name: miner1
    ports:
      - name: miner1-jsonrpc
        protocol: TCP
        port: 8545
        targetPort: 8545
      - name: miner1-wsrpc
        protocol: TCP
        port: 8546
        targetPort: 8546
      - name: miner1-ipc-discovery
        protocol: TCP
        port: 30303
        targetPort: 30303
#---------------------------------=NODES PERSISTANT VOLUME 1=---------------------------------------
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: miner1
    labels:
      type: local
  spec:
    storageClassName: manual
    capacity:
      storage: 20Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Delete
    hostPath:
      #type: DirectoryOrCreate
      path: "/datas/miner1"
#--------------------------=PERSISTENT VOLUME CLAIM 1=------------------------------

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: volume-miner1
    namespace: ethereum-net
  spec:
    storageClassName: manual
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi


# --------------------------=== POD DEPLOYMENT 2 ===--------------------------

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: keystore-config-miner2
    namespace: ethereum-net
    labels:
      app: miner
      name: keystore-config-miner2
  data:
    UTC--2021-07-19T13-43-15.836608918Z--77c1113fb3da88e6a0f6b8b1af7c5f15286f5253: |-
      {"address":"77c1113fb3da88e6a0f6b8b1af7c5f15286f5253","crypto":{"cipher":"aes-128-ctr","ciphertext":"e10ea88900480bf2a9236740aefa0f7ce81e506bb70559cb2b6960b4c335a3f7","cipherparams":{"iv":"c04febbe8b5c2d4014ddd0d4c36bbc67"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"577c66b49aa956267f6cfbf112c39ac41ae9eb8a508fcc9b89763891f0917d5c"},"mac":"02bd56eb20400a0620d2d3456e89734af5eb364f2dd7c3d3e858447f9399f8f8"},"id":"83d18bc3-625d-4954-9425-ee81bdc84a16","version":3}

#---------------------------------=CONFIG MAP NODE 2=---------------------------------------
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: gethconfig-miner2
    namespace: ethereum-net
    labels:
      app: miner
      name: gethconfig-miner2
  data:
    gethconfig: |-
      [Eth]
      NetworkId = 123456
      SyncMode = "full"
      LightPeers = 100
      DatabaseCache = 1024
      EnablePreimageRecording = false
      
      [Eth.Ethash]
      CacheDir = "ethash"
      CachesInMem = 2
      CachesOnDisk = 3
      DatasetDir = "/root/.ethash"
      DatasetsInMem = 1
      DatasetsOnDisk = 2
      PowMode = 0
      
      [Eth.TxPool]
      Locals = []
      NoLocals = false
      Journal = "transactions.rlp"
      Rejournal = 3600000000000
      PriceLimit = 0
      PriceBump = 0
      AccountSlots = 1000000
      GlobalSlots = 1000000
      AccountQueue = 100000
      GlobalQueue = 100000
      Lifetime = 10800000000000
      
      [Eth.GPO]
      Blocks = 20
      Percentile = 60
      
      [Node]
      UserIdent = "miner2"
      DataDir = "/etc/testnet/miner2"
      IPCPath = "/etc/testnet/miner2/geth.ipc"
      HTTPHost = "0.0.0.0"
      HTTPPort = 8545
      HTTPCors = ["*"]
      HTTPVirtualHosts = ["*"]
      HTTPModules = ["eth", "net", "web3", "personal", "miner", "admin", "clique", "personal", "txpool", "debug"]
      WSHost = "0.0.0.0"
      WSPort = 8546
      WSOrigins = ["*"]
      WSModules = ["net", "web3", "eth", "clique", "web3", "personal", "miner", "txpool" , "admin", "debug"]
      
      [Node.P2P]
      MaxPeers = 25
      NoDiscovery = false
      BootstrapNodes = []
      BootstrapNodesV5 = []
      StaticNodes = []
      TrustedNodes = []
      ListenAddr = ":30303"
      EnableMsgEvents = false
      

- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    namespace: ethereum-net
    labels:
      app: miner
      tier: backend
      name: geth-miner2
      serviceSelector: ethereum-node
    name: geth-miner2
  spec:
    selector:
      matchLabels:
        app: miner
    replicas: 1
    serviceName: geth-miner2
    template:
      metadata:
        name: geth-miner2
        labels:
          app: miner
          tier: backend
          name: miner2
      spec:
        containers:
        - name: miner2-container
          image: ethereum/client-go:stable
          imagePullPolicy: Always
          command: [ "sh" ]
          args:
          - "-cx"
          - "rm -rf /etc/testnet/miner2; /usr/local/bin/geth --datadir /etc/testnet/miner2 init /etc/geth/genesis/genesis-geth.json;
            touch /etc/testnet/miner2/genesis_created;
            echo 123 > /etc/testnet/miner2/password.txt;
            mkdir -p /etc/geth/miner2;
            cp /etc/gethconfigmap/miner2/gethconfig.toml /etc/geth/miner2;
            /usr/local/bin/geth --datadir /etc/testnet/miner2 \
            --mine \
            --verbosity 3  \
            --nousb \
            --rpc \
            --ws \
            --metrics --metrics.influxdb --metrics.influxdb.endpoint 'http://influxdb.monitoring:8086' --metrics.influxdb.username 'admin' --metrics.influxdb.password 'admin' \
            --unlock 0x77c1113fb3da88e6a0f6b8b1af7c5f15286f5253 --allow-insecure-unlock --password /etc/testnet/miner2/password.txt --miner.gasprice '0x0' --miner.gaslimit '357500000' --miner.gastarget '357500000' --bootnodes 'enode://b35312c02f067d69549fb4c68d494af4ea2f758075ce925246ce62ce73ed2a5f25d5fc935bacab20d39bb734f78f1d131203b4f2ee6482de9367092271f21454@'$GETH_BOOTNODE_SVC_SERVICE_HOST':0?discport=30301' \
            --config /etc/geth/miner2/gethconfig.toml --maxpendpeers 25 ;"
          ports:
            - containerPort: 8545
            - containerPort: 8546
              protocol: UDP
            - containerPort: 30303
          volumeMounts:
          - name: miner2-persistent-storage
            mountPath: /etc/testnet/miner2
          - name: miner2-config-persistent-storage
            mountPath: /etc/gethconfigmap/miner2
          - name: keystore-config-persistent-storage
            mountPath: /etc/testnet/miner2/keystore/UTC--2021-07-19T13-43-15.836608918Z--77c1113fb3da88e6a0f6b8b1af7c5f15286f5253
            subPath: UTC--2021-07-19T13-43-15.836608918Z--77c1113fb3da88e6a0f6b8b1af7c5f15286f5253
          - name: geth-boot-node-persistent-storage
            mountPath: /etc/testnet/bootnode
          - name: genesis-config-persistent-storage
            mountPath: /etc/geth/genesis/genesis-geth.json
            subPath: genesis-geth.json
        volumes:
        - name: keystore-config-persistent-storage
          configMap:
            name: keystore-config-miner2
            items:
            - key: UTC--2021-07-19T13-43-15.836608918Z--77c1113fb3da88e6a0f6b8b1af7c5f15286f5253
              path: UTC--2021-07-19T13-43-15.836608918Z--77c1113fb3da88e6a0f6b8b1af7c5f15286f5253
        - name: geth-boot-node-persistent-storage
          hostPath:
            path: /var/lib/docker/geth-storage/bootnode
        - name: genesis-config-persistent-storage
          configMap:
            name: genesis-config
            items:
            - key: genesis-geth.json
              path: genesis-geth.json
        - name: miner2-persistent-storage
          persistentVolumeClaim:
          claimName: volume-miner2
        - name: miner2-config-persistent-storage
          configMap:
            name: gethconfig-miner2
            items:
            - key: gethconfig
              path: gethconfig.toml

#---------------------------------=NODES SERVICES 2=---------------------------------------
- apiVersion: v1
  kind: Service
  metadata:
    name: miner2-svc
    namespace: ethereum-net
    labels:
      app: miner
      tier: backend
      name: miner2-svc
  spec:
    selector:
      app: miner
      tier: backend
      name: miner2
    ports:
      - name: miner2-jsonrpc
        protocol: TCP
        port: 8545
        targetPort: 8545
      - name: miner2-wsrpc
        protocol: TCP
        port: 8546
        targetPort: 8546
      - name: miner2-ipc-discovery
        protocol: TCP
        port: 30303
        targetPort: 30303
#---------------------------------=NODES PERSISTANT VOLUME 2=---------------------------------------
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: miner2
    labels:
      type: local
  spec:
    storageClassName: manual
    capacity:
      storage: 20Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Delete
    hostPath:
      #type: DirectoryOrCreate
      path: "/datas/miner2"
#--------------------------=PERSISTENT VOLUME CLAIM 2=------------------------------

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: volume-miner2
    namespace: ethereum-net
  spec:
    storageClassName: manual
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi


# --------------------------=== POD DEPLOYMENT 3 ===--------------------------

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: keystore-config-miner3
    namespace: ethereum-net
    labels:
      app: miner
      name: keystore-config-miner3
  data:
    UTC--2021-07-19T13-43-17.272480165Z--5708c9ed0dc25097f24903d27c13c9b4c18f3e54: |-
      {"address":"5708c9ed0dc25097f24903d27c13c9b4c18f3e54","crypto":{"cipher":"aes-128-ctr","ciphertext":"7a3871137b029dc9acddac9267b119345b7533f31e7e0a178e19e32e59f8d392","cipherparams":{"iv":"e30060b19ea0c0742dcd48ae2c951cdb"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"a2d035a694b419f4333fc6aaa5dd2b94475d614a897efb6f36556d78abb51c49"},"mac":"01f215f0ccb707fcf7822bb8adb8aa05f2806c17cf697d783356e2c842f3a950"},"id":"4a671d59-728f-41f3-99c6-6b01733e849d","version":3}

#---------------------------------=CONFIG MAP NODE 3=---------------------------------------
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: gethconfig-miner3
    namespace: ethereum-net
    labels:
      app: miner
      name: gethconfig-miner3
  data:
    gethconfig: |-
      [Eth]
      NetworkId = 123456
      SyncMode = "full"
      LightPeers = 100
      DatabaseCache = 1024
      EnablePreimageRecording = false
      
      [Eth.Ethash]
      CacheDir = "ethash"
      CachesInMem = 2
      CachesOnDisk = 3
      DatasetDir = "/root/.ethash"
      DatasetsInMem = 1
      DatasetsOnDisk = 2
      PowMode = 0
      
      [Eth.TxPool]
      Locals = []
      NoLocals = false
      Journal = "transactions.rlp"
      Rejournal = 3600000000000
      PriceLimit = 0
      PriceBump = 0
      AccountSlots = 1000000
      GlobalSlots = 1000000
      AccountQueue = 100000
      GlobalQueue = 100000
      Lifetime = 10800000000000
      
      [Eth.GPO]
      Blocks = 20
      Percentile = 60
      
      [Node]
      UserIdent = "miner3"
      DataDir = "/etc/testnet/miner3"
      IPCPath = "/etc/testnet/miner3/geth.ipc"
      HTTPHost = "0.0.0.0"
      HTTPPort = 8545
      HTTPCors = ["*"]
      HTTPVirtualHosts = ["*"]
      HTTPModules = ["eth", "net", "web3", "personal", "miner", "admin", "clique", "personal", "txpool", "debug"]
      WSHost = "0.0.0.0"
      WSPort = 8546
      WSOrigins = ["*"]
      WSModules = ["net", "web3", "eth", "clique", "web3", "personal", "miner", "txpool" , "admin", "debug"]
      
      [Node.P2P]
      MaxPeers = 25
      NoDiscovery = false
      BootstrapNodes = []
      BootstrapNodesV5 = []
      StaticNodes = []
      TrustedNodes = []
      ListenAddr = ":30303"
      EnableMsgEvents = false
      

- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    namespace: ethereum-net
    labels:
      app: miner
      tier: backend
      name: geth-miner3
      serviceSelector: ethereum-node
    name: geth-miner3
  spec:
    selector:
      matchLabels:
        app: miner
    replicas: 1
    serviceName: geth-miner3
    template:
      metadata:
        name: geth-miner3
        labels:
          app: miner
          tier: backend
          name: miner3
      spec:
        containers:
        - name: miner3-container
          image: ethereum/client-go:stable
          imagePullPolicy: Always
          command: [ "sh" ]
          args:
          - "-cx"
          - "rm -rf /etc/testnet/miner3; /usr/local/bin/geth --datadir /etc/testnet/miner3 init /etc/geth/genesis/genesis-geth.json;
            touch /etc/testnet/miner3/genesis_created;
            echo 123 > /etc/testnet/miner3/password.txt;
            mkdir -p /etc/geth/miner3;
            cp /etc/gethconfigmap/miner3/gethconfig.toml /etc/geth/miner3;
            /usr/local/bin/geth --datadir /etc/testnet/miner3 \
            --mine \
            --verbosity 3  \
            --nousb \
            --rpc \
            --ws \
            --metrics --metrics.influxdb --metrics.influxdb.endpoint 'http://influxdb.monitoring:8086' --metrics.influxdb.username 'admin' --metrics.influxdb.password 'admin' \
            --unlock 0x5708c9ed0dc25097f24903d27c13c9b4c18f3e54 --allow-insecure-unlock --password /etc/testnet/miner3/password.txt --miner.gasprice '0x0' --miner.gaslimit '357500000' --miner.gastarget '357500000' --bootnodes 'enode://b35312c02f067d69549fb4c68d494af4ea2f758075ce925246ce62ce73ed2a5f25d5fc935bacab20d39bb734f78f1d131203b4f2ee6482de9367092271f21454@'$GETH_BOOTNODE_SVC_SERVICE_HOST':0?discport=30301' \
            --config /etc/geth/miner3/gethconfig.toml --maxpendpeers 25 ;"
          ports:
            - containerPort: 8545
            - containerPort: 8546
              protocol: UDP
            - containerPort: 30303
          volumeMounts:
          - name: miner3-persistent-storage
            mountPath: /etc/testnet/miner3
          - name: miner3-config-persistent-storage
            mountPath: /etc/gethconfigmap/miner3
          - name: keystore-config-persistent-storage
            mountPath: /etc/testnet/miner3/keystore/UTC--2021-07-19T13-43-17.272480165Z--5708c9ed0dc25097f24903d27c13c9b4c18f3e54
            subPath: UTC--2021-07-19T13-43-17.272480165Z--5708c9ed0dc25097f24903d27c13c9b4c18f3e54
          - name: geth-boot-node-persistent-storage
            mountPath: /etc/testnet/bootnode
          - name: genesis-config-persistent-storage
            mountPath: /etc/geth/genesis/genesis-geth.json
            subPath: genesis-geth.json
        volumes:
        - name: keystore-config-persistent-storage
          configMap:
            name: keystore-config-miner3
            items:
            - key: UTC--2021-07-19T13-43-17.272480165Z--5708c9ed0dc25097f24903d27c13c9b4c18f3e54
              path: UTC--2021-07-19T13-43-17.272480165Z--5708c9ed0dc25097f24903d27c13c9b4c18f3e54
        - name: geth-boot-node-persistent-storage
          hostPath:
            path: /var/lib/docker/geth-storage/bootnode
        - name: genesis-config-persistent-storage
          configMap:
            name: genesis-config
            items:
            - key: genesis-geth.json
              path: genesis-geth.json
        - name: miner3-persistent-storage
          persistentVolumeClaim:
          claimName: volume-miner3
        - name: miner3-config-persistent-storage
          configMap:
            name: gethconfig-miner3
            items:
            - key: gethconfig
              path: gethconfig.toml

#---------------------------------=NODES SERVICES 3=---------------------------------------
- apiVersion: v1
  kind: Service
  metadata:
    name: miner3-svc
    namespace: ethereum-net
    labels:
      app: miner
      tier: backend
      name: miner3-svc
  spec:
    selector:
      app: miner
      tier: backend
      name: miner3
    ports:
      - name: miner3-jsonrpc
        protocol: TCP
        port: 8545
        targetPort: 8545
      - name: miner3-wsrpc
        protocol: TCP
        port: 8546
        targetPort: 8546
      - name: miner3-ipc-discovery
        protocol: TCP
        port: 30303
        targetPort: 30303
#---------------------------------=NODES PERSISTANT VOLUME 3=---------------------------------------
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: miner3
    labels:
      type: local
  spec:
    storageClassName: manual
    capacity:
      storage: 20Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Delete
    hostPath:
      #type: DirectoryOrCreate
      path: "/datas/miner3"
#--------------------------=PERSISTENT VOLUME CLAIM 3=------------------------------

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: volume-miner3
    namespace: ethereum-net
  spec:
    storageClassName: manual
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi


# --------------------------=== POD DEPLOYMENT 4 ===--------------------------

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: keystore-config-miner4
    namespace: ethereum-net
    labels:
      app: miner
      name: keystore-config-miner4
  data:
    UTC--2021-07-19T13-43-18.733289023Z--5e99b8f68e317e40f5b64fb427d6ddd86fb6d89b: |-
      {"address":"5e99b8f68e317e40f5b64fb427d6ddd86fb6d89b","crypto":{"cipher":"aes-128-ctr","ciphertext":"2a967eeb1dbd3b9dd3d484c721072e4eafc0ea2b23729b4ed9b93e5ad1201500","cipherparams":{"iv":"c9b7bf63b0e913ea00e0cb4d128a0408"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"e37b448590113e34d70825e0527bf5e63e7dc3728f167d2667959b811e385398"},"mac":"f3963e30f72a345a56a09216f9fabc8d6ca2d46af43471d57ff0af00d95e9001"},"id":"e0a62ddb-6eb5-4e6d-9637-e189d6a5e9bc","version":3}

#---------------------------------=CONFIG MAP NODE 4=---------------------------------------
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: gethconfig-miner4
    namespace: ethereum-net
    labels:
      app: miner
      name: gethconfig-miner4
  data:
    gethconfig: |-
      [Eth]
      NetworkId = 123456
      SyncMode = "full"
      LightPeers = 100
      DatabaseCache = 1024
      EnablePreimageRecording = false
      
      [Eth.Ethash]
      CacheDir = "ethash"
      CachesInMem = 2
      CachesOnDisk = 3
      DatasetDir = "/root/.ethash"
      DatasetsInMem = 1
      DatasetsOnDisk = 2
      PowMode = 0
      
      [Eth.TxPool]
      Locals = []
      NoLocals = false
      Journal = "transactions.rlp"
      Rejournal = 3600000000000
      PriceLimit = 0
      PriceBump = 0
      AccountSlots = 1000000
      GlobalSlots = 1000000
      AccountQueue = 100000
      GlobalQueue = 100000
      Lifetime = 10800000000000
      
      [Eth.GPO]
      Blocks = 20
      Percentile = 60
      
      [Node]
      UserIdent = "miner4"
      DataDir = "/etc/testnet/miner4"
      IPCPath = "/etc/testnet/miner4/geth.ipc"
      HTTPHost = "0.0.0.0"
      HTTPPort = 8545
      HTTPCors = ["*"]
      HTTPVirtualHosts = ["*"]
      HTTPModules = ["eth", "net", "web3", "personal", "miner", "admin", "clique", "personal", "txpool", "debug"]
      WSHost = "0.0.0.0"
      WSPort = 8546
      WSOrigins = ["*"]
      WSModules = ["net", "web3", "eth", "clique", "web3", "personal", "miner", "txpool" , "admin", "debug"]
      
      [Node.P2P]
      MaxPeers = 25
      NoDiscovery = false
      BootstrapNodes = []
      BootstrapNodesV5 = []
      StaticNodes = []
      TrustedNodes = []
      ListenAddr = ":30303"
      EnableMsgEvents = false
      

- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    namespace: ethereum-net
    labels:
      app: miner
      tier: backend
      name: geth-miner4
      serviceSelector: ethereum-node
    name: geth-miner4
  spec:
    selector:
      matchLabels:
        app: miner
    replicas: 1
    serviceName: geth-miner4
    template:
      metadata:
        name: geth-miner4
        labels:
          app: miner
          tier: backend
          name: miner4
      spec:
        containers:
        - name: miner4-container
          image: ethereum/client-go:stable
          imagePullPolicy: Always
          command: [ "sh" ]
          args:
          - "-cx"
          - "rm -rf /etc/testnet/miner4; /usr/local/bin/geth --datadir /etc/testnet/miner4 init /etc/geth/genesis/genesis-geth.json;
            touch /etc/testnet/miner4/genesis_created;
            echo 123 > /etc/testnet/miner4/password.txt;
            mkdir -p /etc/geth/miner4;
            cp /etc/gethconfigmap/miner4/gethconfig.toml /etc/geth/miner4;
            /usr/local/bin/geth --datadir /etc/testnet/miner4 \
            --mine \
            --verbosity 3  \
            --nousb \
            --rpc \
            --ws \
            --metrics --metrics.influxdb --metrics.influxdb.endpoint 'http://influxdb.monitoring:8086' --metrics.influxdb.username 'admin' --metrics.influxdb.password 'admin' \
            --unlock 0x5e99b8f68e317e40f5b64fb427d6ddd86fb6d89b --allow-insecure-unlock --password /etc/testnet/miner4/password.txt --miner.gasprice '0x0' --miner.gaslimit '357500000' --miner.gastarget '357500000' --bootnodes 'enode://b35312c02f067d69549fb4c68d494af4ea2f758075ce925246ce62ce73ed2a5f25d5fc935bacab20d39bb734f78f1d131203b4f2ee6482de9367092271f21454@'$GETH_BOOTNODE_SVC_SERVICE_HOST':0?discport=30301' \
            --config /etc/geth/miner4/gethconfig.toml --maxpendpeers 25 ;"
          ports:
            - containerPort: 8545
            - containerPort: 8546
              protocol: UDP
            - containerPort: 30303
          volumeMounts:
          - name: miner4-persistent-storage
            mountPath: /etc/testnet/miner4
          - name: miner4-config-persistent-storage
            mountPath: /etc/gethconfigmap/miner4
          - name: keystore-config-persistent-storage
            mountPath: /etc/testnet/miner4/keystore/UTC--2021-07-19T13-43-18.733289023Z--5e99b8f68e317e40f5b64fb427d6ddd86fb6d89b
            subPath: UTC--2021-07-19T13-43-18.733289023Z--5e99b8f68e317e40f5b64fb427d6ddd86fb6d89b
          - name: geth-boot-node-persistent-storage
            mountPath: /etc/testnet/bootnode
          - name: genesis-config-persistent-storage
            mountPath: /etc/geth/genesis/genesis-geth.json
            subPath: genesis-geth.json
        volumes:
        - name: keystore-config-persistent-storage
          configMap:
            name: keystore-config-miner4
            items:
            - key: UTC--2021-07-19T13-43-18.733289023Z--5e99b8f68e317e40f5b64fb427d6ddd86fb6d89b
              path: UTC--2021-07-19T13-43-18.733289023Z--5e99b8f68e317e40f5b64fb427d6ddd86fb6d89b
        - name: geth-boot-node-persistent-storage
          hostPath:
            path: /var/lib/docker/geth-storage/bootnode
        - name: genesis-config-persistent-storage
          configMap:
            name: genesis-config
            items:
            - key: genesis-geth.json
              path: genesis-geth.json
        - name: miner4-persistent-storage
          persistentVolumeClaim:
          claimName: volume-miner4
        - name: miner4-config-persistent-storage
          configMap:
            name: gethconfig-miner4
            items:
            - key: gethconfig
              path: gethconfig.toml

#---------------------------------=NODES SERVICES 4=---------------------------------------
- apiVersion: v1
  kind: Service
  metadata:
    name: miner4-svc
    namespace: ethereum-net
    labels:
      app: miner
      tier: backend
      name: miner4-svc
  spec:
    selector:
      app: miner
      tier: backend
      name: miner4
    ports:
      - name: miner4-jsonrpc
        protocol: TCP
        port: 8545
        targetPort: 8545
      - name: miner4-wsrpc
        protocol: TCP
        port: 8546
        targetPort: 8546
      - name: miner4-ipc-discovery
        protocol: TCP
        port: 30303
        targetPort: 30303
#---------------------------------=NODES PERSISTANT VOLUME 4=---------------------------------------
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: miner4
    labels:
      type: local
  spec:
    storageClassName: manual
    capacity:
      storage: 20Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Delete
    hostPath:
      #type: DirectoryOrCreate
      path: "/datas/miner4"
#--------------------------=PERSISTENT VOLUME CLAIM 4=------------------------------

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: volume-miner4
    namespace: ethereum-net
  spec:
    storageClassName: manual
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi


# --------------------------=== POD DEPLOYMENT 5 ===--------------------------

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: keystore-config-miner5
    namespace: ethereum-net
    labels:
      app: miner
      name: keystore-config-miner5
  data:
    UTC--2021-07-19T13-43-20.173237944Z--c36194ca819c884d556eab67a0a3a1d760dcdff4: |-
      {"address":"c36194ca819c884d556eab67a0a3a1d760dcdff4","crypto":{"cipher":"aes-128-ctr","ciphertext":"bdc7a07020b23c3401ffc95423a08c4f8fd15e2dd401691ba51d83d661828016","cipherparams":{"iv":"edb9823a2bd03d6d5f4678b728992f5b"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"25ff6dddda11ca5debc8a2051140eb380672af5f63b739feaa103e886fd242d5"},"mac":"778e1d1a1d1f4aafd39ac2c84b7172a587d563e81b1714ee23666f69a6568393"},"id":"fc45e16e-f1bf-40ef-9e51-2217d5e64088","version":3}

#---------------------------------=CONFIG MAP NODE 5=---------------------------------------
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: gethconfig-miner5
    namespace: ethereum-net
    labels:
      app: miner
      name: gethconfig-miner5
  data:
    gethconfig: |-
      [Eth]
      NetworkId = 123456
      SyncMode = "full"
      LightPeers = 100
      DatabaseCache = 1024
      EnablePreimageRecording = false
      
      [Eth.Ethash]
      CacheDir = "ethash"
      CachesInMem = 2
      CachesOnDisk = 3
      DatasetDir = "/root/.ethash"
      DatasetsInMem = 1
      DatasetsOnDisk = 2
      PowMode = 0
      
      [Eth.TxPool]
      Locals = []
      NoLocals = false
      Journal = "transactions.rlp"
      Rejournal = 3600000000000
      PriceLimit = 0
      PriceBump = 0
      AccountSlots = 1000000
      GlobalSlots = 1000000
      AccountQueue = 100000
      GlobalQueue = 100000
      Lifetime = 10800000000000
      
      [Eth.GPO]
      Blocks = 20
      Percentile = 60
      
      [Node]
      UserIdent = "miner5"
      DataDir = "/etc/testnet/miner5"
      IPCPath = "/etc/testnet/miner5/geth.ipc"
      HTTPHost = "0.0.0.0"
      HTTPPort = 8545
      HTTPCors = ["*"]
      HTTPVirtualHosts = ["*"]
      HTTPModules = ["eth", "net", "web3", "personal", "miner", "admin", "clique", "personal", "txpool", "debug"]
      WSHost = "0.0.0.0"
      WSPort = 8546
      WSOrigins = ["*"]
      WSModules = ["net", "web3", "eth", "clique", "web3", "personal", "miner", "txpool" , "admin", "debug"]
      
      [Node.P2P]
      MaxPeers = 25
      NoDiscovery = false
      BootstrapNodes = []
      BootstrapNodesV5 = []
      StaticNodes = []
      TrustedNodes = []
      ListenAddr = ":30303"
      EnableMsgEvents = false
      

- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    namespace: ethereum-net
    labels:
      app: miner
      tier: backend
      name: geth-miner5
      serviceSelector: ethereum-node
    name: geth-miner5
  spec:
    selector:
      matchLabels:
        app: miner
    replicas: 1
    serviceName: geth-miner5
    template:
      metadata:
        name: geth-miner5
        labels:
          app: miner
          tier: backend
          name: miner5
      spec:
        containers:
        - name: miner5-container
          image: ethereum/client-go:stable
          imagePullPolicy: Always
          command: [ "sh" ]
          args:
          - "-cx"
          - "rm -rf /etc/testnet/miner5; /usr/local/bin/geth --datadir /etc/testnet/miner5 init /etc/geth/genesis/genesis-geth.json;
            touch /etc/testnet/miner5/genesis_created;
            echo 123 > /etc/testnet/miner5/password.txt;
            mkdir -p /etc/geth/miner5;
            cp /etc/gethconfigmap/miner5/gethconfig.toml /etc/geth/miner5;
            /usr/local/bin/geth --datadir /etc/testnet/miner5 \
            --mine \
            --verbosity 3  \
            --nousb \
            --rpc \
            --ws \
            --metrics --metrics.influxdb --metrics.influxdb.endpoint 'http://influxdb.monitoring:8086' --metrics.influxdb.username 'admin' --metrics.influxdb.password 'admin' \
            --unlock 0xc36194ca819c884d556eab67a0a3a1d760dcdff4 --allow-insecure-unlock --password /etc/testnet/miner5/password.txt --miner.gasprice '0x0' --miner.gaslimit '357500000' --miner.gastarget '357500000' --bootnodes 'enode://b35312c02f067d69549fb4c68d494af4ea2f758075ce925246ce62ce73ed2a5f25d5fc935bacab20d39bb734f78f1d131203b4f2ee6482de9367092271f21454@'$GETH_BOOTNODE_SVC_SERVICE_HOST':0?discport=30301' \
            --config /etc/geth/miner5/gethconfig.toml --maxpendpeers 25 ;"
          ports:
            - containerPort: 8545
            - containerPort: 8546
              protocol: UDP
            - containerPort: 30303
          volumeMounts:
          - name: miner5-persistent-storage
            mountPath: /etc/testnet/miner5
          - name: miner5-config-persistent-storage
            mountPath: /etc/gethconfigmap/miner5
          - name: keystore-config-persistent-storage
            mountPath: /etc/testnet/miner5/keystore/UTC--2021-07-19T13-43-20.173237944Z--c36194ca819c884d556eab67a0a3a1d760dcdff4
            subPath: UTC--2021-07-19T13-43-20.173237944Z--c36194ca819c884d556eab67a0a3a1d760dcdff4
          - name: geth-boot-node-persistent-storage
            mountPath: /etc/testnet/bootnode
          - name: genesis-config-persistent-storage
            mountPath: /etc/geth/genesis/genesis-geth.json
            subPath: genesis-geth.json
        volumes:
        - name: keystore-config-persistent-storage
          configMap:
            name: keystore-config-miner5
            items:
            - key: UTC--2021-07-19T13-43-20.173237944Z--c36194ca819c884d556eab67a0a3a1d760dcdff4
              path: UTC--2021-07-19T13-43-20.173237944Z--c36194ca819c884d556eab67a0a3a1d760dcdff4
        - name: geth-boot-node-persistent-storage
          hostPath:
            path: /var/lib/docker/geth-storage/bootnode
        - name: genesis-config-persistent-storage
          configMap:
            name: genesis-config
            items:
            - key: genesis-geth.json
              path: genesis-geth.json
        - name: miner5-persistent-storage
          persistentVolumeClaim:
          claimName: volume-miner5
        - name: miner5-config-persistent-storage
          configMap:
            name: gethconfig-miner5
            items:
            - key: gethconfig
              path: gethconfig.toml

#---------------------------------=NODES SERVICES 5=---------------------------------------
- apiVersion: v1
  kind: Service
  metadata:
    name: miner5-svc
    namespace: ethereum-net
    labels:
      app: miner
      tier: backend
      name: miner5-svc
  spec:
    selector:
      app: miner
      tier: backend
      name: miner5
    ports:
      - name: miner5-jsonrpc
        protocol: TCP
        port: 8545
        targetPort: 8545
      - name: miner5-wsrpc
        protocol: TCP
        port: 8546
        targetPort: 8546
      - name: miner5-ipc-discovery
        protocol: TCP
        port: 30303
        targetPort: 30303
#---------------------------------=NODES PERSISTANT VOLUME 5=---------------------------------------
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: miner5
    labels:
      type: local
  spec:
    storageClassName: manual
    capacity:
      storage: 20Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Delete
    hostPath:
      #type: DirectoryOrCreate
      path: "/datas/miner5"
#--------------------------=PERSISTENT VOLUME CLAIM 5=------------------------------

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: volume-miner5
    namespace: ethereum-net
  spec:
    storageClassName: manual
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi


#--------------------------=ONE SERVICE FOR ALL NODE (websocket)=--------------------------------

- apiVersion: v1
  kind: Service
  metadata:
    name: ethereum-ws-service
    namespace: ethereum-net
  spec:
    type: ClusterIP
    selector:
      app: miner 
    ports:
      - name: "8546"
        protocol: TCP
        port: 8546
        targetPort: 8546

#--------------------------=ONE SERVICE FOR ALL NODE (HTTP)=--------------------------------

- apiVersion: v1
  kind: Service
  metadata:
    name: ethereum-http-service
    namespace: ethereum-net
  spec:
    type: ClusterIP
    selector:
      app: miner 
    ports:
      - name: "8545"
        protocol: TCP
        port: 8545
        targetPort: 8545
#--------------------------= genesis-config =--------------------------------
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: genesis-config
    namespace: ethereum-net
    labels:
      app: kuberneteth
      name: genesis-config
  data:
    genesis-geth.json: |-
      {
        "config": {
          "chainId": 123456,
          "homesteadBlock": 0,
          "eip150Block": 0,
          "eip150Hash": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "eip155Block": 0,
          "eip158Block": 0,
          "byzantiumBlock": 0,
          "constantinopleBlock": 0,
          "petersburgBlock": 0,
          "istanbulBlock": 0,
          "berlinBlock": 0,
          "clique": {
            "period": 2,
            "epoch": 30000
          }
        },
        "nonce": "0x0",
        "timestamp": "0x5cdec502",
        "gasLimit": "0x154F0460",
        "difficulty" : "0x1",
        "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "coinbase": "0x0000000000000000000000000000000000000000",
        "extraData": "0x00000000000000000000000000000000000000000000000000000000000000006c72e4c3c645a5d84b44f6f143ce559c9e8d815377c1113fb3da88e6a0f6b8b1af7c5f15286f52535708c9ed0dc25097f24903d27c13c9b4c18f3e545e99b8f68e317e40f5b64fb427d6ddd86fb6d89bc36194ca819c884d556eab67a0a3a1d760dcdff40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "alloc": {
                        "6c72e4c3c645a5d84b44f6f143ce559c9e8d8153": {
              "balance": "0x200000000000000000000000000000000000000000000000000000000000000"
            },            "77c1113fb3da88e6a0f6b8b1af7c5f15286f5253": {
              "balance": "0x200000000000000000000000000000000000000000000000000000000000000"
            },            "5708c9ed0dc25097f24903d27c13c9b4c18f3e54": {
              "balance": "0x200000000000000000000000000000000000000000000000000000000000000"
            },            "5e99b8f68e317e40f5b64fb427d6ddd86fb6d89b": {
              "balance": "0x200000000000000000000000000000000000000000000000000000000000000"
            },            "c36194ca819c884d556eab67a0a3a1d760dcdff4": {
              "balance": "0x200000000000000000000000000000000000000000000000000000000000000"
            }
        },
        "number": "0x0",
        "gasUsed": "0x0",
        "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000"
      }
####################################### ETH MONITOR STUFF #########################
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    #creationTimestamp: null
    namespace: ethereum-net
    labels:
      name: volume-ethmonitor
    name: volume-ethmonitor
  spec:
    storageClassName: manual
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi

- apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: monitor
    labels:
      type: local
  spec:
    storageClassName: manual
    capacity:
      storage: 10Gi
    accessModes:
      - ReadWriteOnce
    persistentVolumeReclaimPolicy: Delete
    hostPath:
      #type: DirectoryOrCreate
      path: "/datas/monitor"

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: monitor-config
    namespace: ethereum-net
    labels:
      app: kuberneteth
      name: monitor-config
  data:
    app.json: |-
      [
                {
          "name"              : "miner1",
          "cwd"               : ".",
          "script"            : "app.js",
          "log_date_format"   : "YYYY-MM-DD HH:mm Z",
          "merge_logs"        : false,
          "watch"             : false,
          "exec_interpreter"  : "node",
          "exec_mode"         : "fork_mode",
          "env":
          {
            "NODE_ENV"        : "production",
            "RPC_HOST"        : "miner1-rpchost",
            "RPC_PORT"        : "8545",
            "LISTENING_PORT"  : "30303",
            "INSTANCE_NAME"   : "miner1",
            "CONTACT_DETAILS" : "",
            "WS_SERVER"       : "localhost:3001",
            "WS_SECRET"       : "123",
            "VERBOSITY"       : 3
          }
        },        {
          "name"              : "miner2",
          "cwd"               : ".",
          "script"            : "app.js",
          "log_date_format"   : "YYYY-MM-DD HH:mm Z",
          "merge_logs"        : false,
          "watch"             : false,
          "exec_interpreter"  : "node",
          "exec_mode"         : "fork_mode",
          "env":
          {
            "NODE_ENV"        : "production",
            "RPC_HOST"        : "miner2-rpchost",
            "RPC_PORT"        : "8545",
            "LISTENING_PORT"  : "30303",
            "INSTANCE_NAME"   : "miner2",
            "CONTACT_DETAILS" : "",
            "WS_SERVER"       : "localhost:3001",
            "WS_SECRET"       : "123",
            "VERBOSITY"       : 3
          }
        },        {
          "name"              : "miner3",
          "cwd"               : ".",
          "script"            : "app.js",
          "log_date_format"   : "YYYY-MM-DD HH:mm Z",
          "merge_logs"        : false,
          "watch"             : false,
          "exec_interpreter"  : "node",
          "exec_mode"         : "fork_mode",
          "env":
          {
            "NODE_ENV"        : "production",
            "RPC_HOST"        : "miner3-rpchost",
            "RPC_PORT"        : "8545",
            "LISTENING_PORT"  : "30303",
            "INSTANCE_NAME"   : "miner3",
            "CONTACT_DETAILS" : "",
            "WS_SERVER"       : "localhost:3001",
            "WS_SECRET"       : "123",
            "VERBOSITY"       : 3
          }
        },        {
          "name"              : "miner4",
          "cwd"               : ".",
          "script"            : "app.js",
          "log_date_format"   : "YYYY-MM-DD HH:mm Z",
          "merge_logs"        : false,
          "watch"             : false,
          "exec_interpreter"  : "node",
          "exec_mode"         : "fork_mode",
          "env":
          {
            "NODE_ENV"        : "production",
            "RPC_HOST"        : "miner4-rpchost",
            "RPC_PORT"        : "8545",
            "LISTENING_PORT"  : "30303",
            "INSTANCE_NAME"   : "miner4",
            "CONTACT_DETAILS" : "",
            "WS_SERVER"       : "localhost:3001",
            "WS_SECRET"       : "123",
            "VERBOSITY"       : 3
          }
        },        {
          "name"              : "miner5",
          "cwd"               : ".",
          "script"            : "app.js",
          "log_date_format"   : "YYYY-MM-DD HH:mm Z",
          "merge_logs"        : false,
          "watch"             : false,
          "exec_interpreter"  : "node",
          "exec_mode"         : "fork_mode",
          "env":
          {
            "NODE_ENV"        : "production",
            "RPC_HOST"        : "miner5-rpchost",
            "RPC_PORT"        : "8545",
            "LISTENING_PORT"  : "30303",
            "INSTANCE_NAME"   : "miner5",
            "CONTACT_DETAILS" : "",
            "WS_SERVER"       : "localhost:3001",
            "WS_SECRET"       : "123",
            "VERBOSITY"       : 3
          }
        }
      ]

- apiVersion: v1
  kind: Service
  metadata:
    namespace: ethereum-net
    name: monitor-svc
    labels:
      app: kuberneteth
      tier: frontend
      name: monitor-svc
  spec:
    selector:
      app: kuberneteth
      tier: frontend
    type: ClusterIP
    ports:
      - name: monitor-port
        protocol: TCP
        port: 3001


- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    namespace: ethereum-net
    name: monitor
  spec:
    selector:
      matchLabels:
        app: kuberneteth
    replicas: 1
    serviceName: monitor
    template:
      metadata:
        name: monitor
        labels:
          app: kuberneteth
          tier: frontend
          name: monitor
      spec:
        initContainers:
        - name: monitor-init-container
          image: ijsfd/eth-netstats
          imagePullPolicy: IfNotPresent
          command: [ "sh" ]
          args:
          - "-cx"
          - "cp -r /eth-net-intelligence-api/* /ethmonitor;
            cp /monitor-configmap/app.json /ethmonitor/app.json;
                        sed -i \"s/miner1-rpchost/$MINER1_SVC_SERVICE_HOST/g\" /ethmonitor/app.json;
             sed -i \"s/miner2-rpchost/$MINER2_SVC_SERVICE_HOST/g\" /ethmonitor/app.json;
             sed -i \"s/miner3-rpchost/$MINER3_SVC_SERVICE_HOST/g\" /ethmonitor/app.json;
             sed -i \"s/miner4-rpchost/$MINER4_SVC_SERVICE_HOST/g\" /ethmonitor/app.json;
             sed -i \"s/miner5-rpchost/$MINER5_SVC_SERVICE_HOST/g\" /ethmonitor/app.json;
 
            exit 0;"
          volumeMounts:
          - name: monitor-configmap-volume
            mountPath: /monitor-configmap/app.json
            subPath: app.json
          - name: monitor-config-temp
            mountPath: /ethmonitor
        containers:
        - name: eth-netstats-container
          image: ijsfd/eth-netstats
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
          env:
          - name: WS_SECRET
            value: "123"
          - name: PORT
            value: "3001"
        - name: eth-net-intelligence-api-container
          image: ijsfd/eth-net-intelligence-api
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: monitor-config-temp 
            mountPath: /eth-net-intelligence-api/app.json
            subPath: app.json
        volumes:
        - name: monitor-configmap-volume
          configMap:
            name: monitor-config
            items:
            - key: app.json
              path: app.json
        - name: monitor-config-persistent-storage
          persistentVolumeClaim:
            claimName: volume-ethmonitor
        - name: monitor-config-temp
          emptyDir: {} 

####################################### BENCHMARK MACHINE #########################

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ubuntu
    namespace: ethereum-net
  spec:
    replicas: 1
    selector:
        matchLabels:
          name: ubuntu-deployment
    template:
      metadata:
        name: ubuntu-deployment
        labels:
          app: ubuntu
          tier: backend
          name: ubuntu-deployment
      spec:
        containers:
        - name: ubuntu
          image: ubuntu
          command:
            - "sleep"
            - "604800"
          resources:
            limits:
              cpu: "12"
              memory: "12Gi"
            requests:
              cpu: "10"
              memory: "10Gi"
          imagePullPolicy: IfNotPresent
        restartPolicy: Always
####################################### MongoDB MACHINE #########################
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: mongodb-standalone
  spec:
    serviceName: database
    replicas: 1
    selector:
      matchLabels:
        app: database
    template:
      metadata:
        labels:
          app: database
          selector: mongodb-standalone
      spec:
        containers:
        - name: mongodb-standalone
          image: mongo:4.0.8
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: guest
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: guest
          resources:
              limits:
                cpu: "12"
                memory: "12Gi"
              requests:
                cpu: "10"
                memory: "10Gi"
          imagePullPolicy: IfNotPresent
        restartPolicy: Always

