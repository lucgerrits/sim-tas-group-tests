# Copyright 2019 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: v1
kind: List

items:

# --------------------------=== pod 0 ===--------------------------

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: node-0
    namespace: sim-sawtooth-net
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: sawtooth-0
    template:
      metadata:
        labels:
          name: sawtooth-0
          serviceSelector: sawtooth-node
      spec:
        containers:
          - name: sawtooth-intkey-tp-python
            image: hyperledger/sawtooth-intkey-tp-python:chime
            command:
              - bash
            args:
              - -c
              - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-pbft-engine
            image: hyperledger/sawtooth-pbft-engine:chime
            command:
              - bash
            args:
              - -c
              - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

          - name: sawtooth-rest-api
            image: hyperledger/sawtooth-rest-api:chime
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - |
                if [ ! -e /etc/sawtooth/rest_api.toml ]; then
                  cp /etc/sawtooth/rest_api.toml.example /etc/sawtooth/rest_api.toml
                fi &&
                sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008
            envFrom:
              - secretRef:
                  name: sawtooth-secrets
            volumeMounts:
              - name: validator-config-volume
                mountPath: /etc/sawtooth/rest_api.toml
                subPath: validator.toml
                readOnly: true 
            readinessProbe:
              httpGet:
                path: /status
                port: 8008
              initialDelaySeconds: 90
              periodSeconds: 50

          - name: sawtooth-settings-tp
            image: hyperledger/sawtooth-settings-tp:chime
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: hyperledger/sawtooth-shell:chime
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-smallbank-tp-rust
            image: hyperledger/sawtooth-smallbank-tp-rust:chime
            command:
              - bash
            args:
              - -c
              - "smallbank-tp-rust -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-validator
            image: hyperledger/sawtooth-validator:chime
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            envFrom:
              - configMapRef:
                  name: keys-config
              - secretRef:
                  name: sawtooth-secrets
            volumeMounts:
              - name: validator-config-volume
                mountPath: /etc/sawtooth/validator.toml
                subPath: validator.toml
                readOnly: true     
            command:
              - bash
            args:
              - -c
              - |
                  if [ ! -e /etc/sawtooth/validator.toml ]; then
                    cp /etc/sawtooth/validator.toml.example /etc/sawtooth/validator.toml
                  fi &&
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft0priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft0pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  if [ ! -e /root/.sawtooth/keys/my_key.priv ]; then
                    sawtooth keygen my_key
                  fi &&
                  if [ ! -e config-genesis.batch ]; then
                    sawset genesis -k /root/.sawtooth/keys/my_key.priv -o config-genesis.batch
                  fi &&
                  sleep 30 &&
                  echo sawtooth.consensus.pbft.members=["\"$pbft0pub\",\"$pbft1pub\",\"$pbft2pub\",\"$pbft3pub\",\"$pbft4pub\""] &&
                  if [ ! -e config.batch ]; then
                    sawset proposal create \
                      -k /root/.sawtooth/keys/my_key.priv \
                      sawtooth.consensus.algorithm.name=pbft \
                      sawtooth.consensus.algorithm.version=1.0\
                      sawtooth.consensus.pbft.members=["\"$pbft0pub\",\"$pbft1pub\",\"$pbft2pub\",\"$pbft3pub\",\"$pbft4pub\""] \
                      sawtooth.publisher.max_batches_per_block=1200 \
                      -o config.batch
                  fi && \
                  if [ ! -e /var/lib/sawtooth/genesis.batch ]; then
                    sawadm genesis config-genesis.batch config.batch
                  fi &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_0_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000   
        volumes:
          - name: validator-config-volume
            configMap:
              name: validator-influx-config
- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-0
    namespace: sim-sawtooth-net
  spec:
    type: ClusterIP
    selector:
      name: sawtooth-0
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800
# --------------------------=== pod 1 ===--------------------------
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: node-1
    namespace: sim-sawtooth-net
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: sawtooth-1
    template:
      metadata:
        labels:
          name: sawtooth-1
          serviceSelector: sawtooth-node
      spec:
        containers:
          - name: sawtooth-intkey-tp-python
            image: hyperledger/sawtooth-intkey-tp-python:chime
            command:
              - bash
            args:
              - -c
              - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-pbft-engine
            image: hyperledger/sawtooth-pbft-engine:chime
            command:
              - bash
            args:
              - -c
              - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

          - name: sawtooth-rest-api
            image: hyperledger/sawtooth-rest-api:chime
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - |
                if [ ! -e /etc/sawtooth/rest_api.toml ]; then
                  cp /etc/sawtooth/rest_api.toml.example /etc/sawtooth/rest_api.toml
                fi &&
                sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008
            envFrom:
              - secretRef:
                  name: sawtooth-secrets
            volumeMounts:
              - name: validator-config-volume
                mountPath: /etc/sawtooth/rest_api.toml
                subPath: validator.toml
                readOnly: true
            readinessProbe:
              httpGet:
                path: /status
                port: 8008
              initialDelaySeconds: 15
              periodSeconds: 10

          - name: sawtooth-settings-tp
            image: hyperledger/sawtooth-settings-tp:chime
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: hyperledger/sawtooth-shell:chime
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-smallbank-tp-rust
            image: hyperledger/sawtooth-smallbank-tp-rust:chime
            command:
              - bash
            args:
              - -c
              - "smallbank-tp-rust -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-validator
            image: hyperledger/sawtooth-validator:chime
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            env:
              - name: pbft1priv
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft1priv
              - name: pbft1pub
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft1pub
            volumeMounts:
              - name: validator-config-volume
                mountPath: /etc/sawtooth/validator.toml
                subPath: validator.toml
                readOnly: true
            command:
              - bash
            args:
              - -c
              - |
                  if [ ! -e /etc/sawtooth/validator.toml ]; then
                    cp /etc/sawtooth/validator.toml.example /etc/sawtooth/validator.toml
                  fi &&
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft1priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft1pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_1_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000 \
                    --peers tcp://$SAWTOOTH_0_SERVICE_HOST:8800

          - name: sawtooth-xo-tp-python
            image: hyperledger/sawtooth-xo-tp-python:chime
            command:
              - bash
            args:
              - -c
              - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"
        volumes:
          - name: validator-config-volume
            configMap:
              name: validator-influx-config
- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-1
    namespace: sim-sawtooth-net
  spec:
    type: ClusterIP
    selector:
      name: sawtooth-1
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800

# --------------------------=== pod 2 ===--------------------------

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: node-2
    namespace: sim-sawtooth-net
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: sawtooth-2
    template:
      metadata:
        labels:
          name: sawtooth-2
          serviceSelector: sawtooth-node
      spec:
        containers:
          - name: sawtooth-intkey-tp-python
            image: hyperledger/sawtooth-intkey-tp-python:chime
            command:
              - bash
            args:
              - -c
              - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-pbft-engine
            image: hyperledger/sawtooth-pbft-engine:chime
            command:
              - bash
            args:
              - -c
              - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

          - name: sawtooth-rest-api
            image: hyperledger/sawtooth-rest-api:chime
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - |
                if [ ! -e /etc/sawtooth/rest_api.toml ]; then
                  cp /etc/sawtooth/rest_api.toml.example /etc/sawtooth/rest_api.toml
                fi &&
                sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008
            envFrom:
              - secretRef:
                  name: sawtooth-secrets
            volumeMounts:
              - name: validator-config-volume
                mountPath: /etc/sawtooth/rest_api.toml
                subPath: validator.toml
                readOnly: true
            readinessProbe:
              httpGet:
                path: /status
                port: 8008
              initialDelaySeconds: 30
              periodSeconds: 10

          - name: sawtooth-settings-tp
            image: hyperledger/sawtooth-settings-tp:chime
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: hyperledger/sawtooth-shell:chime
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-smallbank-tp-rust
            image: hyperledger/sawtooth-smallbank-tp-rust:chime
            command:
              - bash
            args:
              - -c
              - "smallbank-tp-rust -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-validator
            image: hyperledger/sawtooth-validator:chime
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            env:
              - name: pbft2priv
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft2priv
              - name: pbft2pub
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft1pub
            volumeMounts:
              - name: validator-config-volume
                mountPath: /etc/sawtooth/validator.toml
                subPath: validator.toml
                readOnly: true
            command:
              - bash
            args:
              - -c
              - |
                  if [ ! -e /etc/sawtooth/validator.toml ]; then
                    cp /etc/sawtooth/validator.toml.example /etc/sawtooth/validator.toml
                  fi &&
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft2priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft2pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_2_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000 \
                    --peers tcp://$SAWTOOTH_0_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_1_SERVICE_HOST:8800

          - name: sawtooth-xo-tp-python
            image: hyperledger/sawtooth-xo-tp-python:chime
            command:
              - bash
            args:
              - -c
              - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"
        volumes:
          - name: validator-config-volume
            configMap:
              name: validator-influx-config
- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-2
    namespace: sim-sawtooth-net
  spec:
    type: ClusterIP
    selector:
      name: sawtooth-2
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800


# --------------------------=== pod 3 ===--------------------------

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: node-3
    namespace: sim-sawtooth-net
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: sawtooth-3
    template:
      metadata:
        labels:
          name: sawtooth-3
          serviceSelector: sawtooth-node
      spec:
        containers:
          - name: sawtooth-intkey-tp-python
            image: hyperledger/sawtooth-intkey-tp-python:chime
            command:
              - bash
            args:
              - -c
              - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-pbft-engine
            image: hyperledger/sawtooth-pbft-engine:chime
            command:
              - bash
            args:
              - -c
              - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

          - name: sawtooth-rest-api
            image: hyperledger/sawtooth-rest-api:chime
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - |
                if [ ! -e /etc/sawtooth/rest_api.toml ]; then
                  cp /etc/sawtooth/rest_api.toml.example /etc/sawtooth/rest_api.toml
                fi &&
                sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008
            envFrom:
              - secretRef:
                  name: sawtooth-secrets
            volumeMounts:
              - name: validator-config-volume
                mountPath: /etc/sawtooth/rest_api.toml
                subPath: validator.toml
                readOnly: true
            readinessProbe:
              httpGet:
                path: /status
                port: 8008
              initialDelaySeconds: 15
              periodSeconds: 10

          - name: sawtooth-settings-tp
            image: hyperledger/sawtooth-settings-tp:chime
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: hyperledger/sawtooth-shell:chime
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-smallbank-tp-rust
            image: hyperledger/sawtooth-smallbank-tp-rust:chime
            command:
              - bash
            args:
              - -c
              - "smallbank-tp-rust -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-validator
            image: hyperledger/sawtooth-validator:chime
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            env:
              - name: pbft3priv
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft3priv
              - name: pbft3pub
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft3pub
            volumeMounts:
              - name: validator-config-volume
                mountPath: /etc/sawtooth/validator.toml
                subPath: validator.toml
                readOnly: true
            command:
              - bash
            args:
              - -c
              - |
                  if [ ! -e /etc/sawtooth/validator.toml ]; then
                    cp /etc/sawtooth/validator.toml.example /etc/sawtooth/validator.toml
                  fi &&
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft3priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft3pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_3_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000 \
                    --peers tcp://$SAWTOOTH_0_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_1_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_2_SERVICE_HOST:8800

          - name: sawtooth-xo-tp-python
            image: hyperledger/sawtooth-xo-tp-python:chime
            command:
              - bash
            args:
              - -c
              - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"
        volumes:
          - name: validator-config-volume
            configMap:
              name: validator-influx-config
- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-3
    namespace: sim-sawtooth-net
  spec:
    type: ClusterIP
    selector:
      name: sawtooth-3
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800


# --------------------------=== pod 4 ===--------------------------

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: node-4
    namespace: sim-sawtooth-net
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: sawtooth-4
    template:
      metadata:
        labels:
          name: sawtooth-4
          serviceSelector: sawtooth-node
      spec:
        containers:
          - name: sawtooth-intkey-tp-python
            image: hyperledger/sawtooth-intkey-tp-python:chime
            command:
              - bash
            args:
              - -c
              - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-pbft-engine
            image: hyperledger/sawtooth-pbft-engine:chime
            command:
              - bash
            args:
              - -c
              - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

          - name: sawtooth-rest-api
            image: hyperledger/sawtooth-rest-api:chime
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - |
                if [ ! -e /etc/sawtooth/rest_api.toml ]; then
                  cp /etc/sawtooth/rest_api.toml.example /etc/sawtooth/rest_api.toml
                fi &&
                sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008
            envFrom:
              - secretRef:
                  name: sawtooth-secrets
            volumeMounts:
              - name: validator-config-volume
                mountPath: /etc/sawtooth/rest_api.toml
                subPath: validator.toml
                readOnly: true
            readinessProbe:
              httpGet:
                path: /status
                port: 8008
              initialDelaySeconds: 15
              periodSeconds: 10

          - name: sawtooth-settings-tp
            image: hyperledger/sawtooth-settings-tp:chime
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: hyperledger/sawtooth-shell:chime
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-smallbank-tp-rust
            image: hyperledger/sawtooth-smallbank-tp-rust:chime
            command:
              - bash
            args:
              - -c
              - "smallbank-tp-rust -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-validator
            image: hyperledger/sawtooth-validator:chime
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            env:
              - name: pbft4priv
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft4priv
              - name: pbft4pub
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft4pub
            volumeMounts:
              - name: validator-config-volume
                mountPath: /etc/sawtooth/validator.toml
                subPath: validator.toml
                readOnly: true
            command:
              - bash
            args:
              - -c
              - |
                  if [ ! -e /etc/sawtooth/validator.toml ]; then
                    cp /etc/sawtooth/validator.toml.example /etc/sawtooth/validator.toml
                  fi &&
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft4priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft4pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_4_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000 \
                    --peers tcp://$SAWTOOTH_0_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_1_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_2_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_3_SERVICE_HOST:8800

          - name: sawtooth-xo-tp-python
            image: hyperledger/sawtooth-xo-tp-python:chime
            command:
              - bash
            args:
              - -c
              - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"
        volumes:
          - name: validator-config-volume
            configMap:
              name: validator-influx-config
- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-4
    namespace: sim-sawtooth-net
  spec:
    type: ClusterIP
    selector:
      name: sawtooth-4
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800
#--------------------------=ONE SERVICE FOR ALL NODE=--------------------------------

- apiVersion: v1
  kind: Service
  metadata:
    name: api-rest-service
    namespace: sim-sawtooth-net
  spec:
    type: LoadBalancer
    selector:
      serviceSelector: sawtooth-node
    ports:
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008

#------------------------SAWTOOTH-INFLUXDB-SECRET----------------------------------
- apiVersion: v1
  kind: Secret
  metadata:
    name: sawtooth-secrets
    namespace: sim-sawtooth-net
  type: Opaque
  stringData:
    INFLUXDB_DB: local_monitoring
    INFLUXDB_URL: http://influxdb:8086
    INFLUXDB_USER: admin
    INFLUXDB_USER_PASSWORD: admin

#----------------------SAWTOOTH-VALIDATOR-CONFIGMAP---------------------------------
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: validator-influx-config
    namespace: sim-sawtooth-net
  data:
    validator.toml: |+

      opentsdb_url = "http://influxdb:8086"
      opentsdb_db = "local_monitoring"
      opentsdb_username = "admin"
      opentsdb_password = "admin"
